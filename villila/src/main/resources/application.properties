spring.application.name=villigo

# 데이터베이스 연결 정보
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate DDL(create, alter, drop, truncate) 자동 실행을 비활성화
# drop table, create table을 실행하지 않음.
spring.jpa.hibernate.ddl-auto=none

# JPA/Hibernate에서 생성된 SQL을 로그에서 예쁘게 출력.
spring.jpa.properties.hibernate.format_sql=true
# JPA/Hiber에서 SQL을 로그 출력할 때 syntax coloring을 제공.
spring.jpa.properties.hibernate.highlight_sql=true

# JPA/Hibernate 네이밍 전략 수정: 테이블 이름을 대문자로 처리
spring.jpa.hibernate.naming.physical-strategy=com.splusz.villigo.strategy.CustomNamingStrategy

# log4j2 로그 레벨(trace < debug < info < warn < error) 설정
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.orm.jdbc.bind=trace

# 정적 리소스 경로 설정 (Spring Boot가 static 폴더를 인식하도록 설정)
spring.web.resources.static-locations=classpath:/static/

# CSS, JS 변경 시 즉시 반영되도록 캐시 비활성화
spring.web.resources.cache.period=0

# 파일 첨부 경로 
file.upload-dir=${UPLOAD_PATH}

# 구글 로그인 OAuth 설정
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=https://localhost:8080/login/oauth2/code/google

# Spring Security 로그 레벨 설정
#logging.level.org.springframework.security=debug

# thymeleaf 디버그 및 설정
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=false
spring.thymeleaf.check-template-location=true
logging.level.com.splusz.villigo=DEBUG
logging.level.org.thymeleaf=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.boot=DEBUG

# Kakao API
kakao.restapi=${KAKAO_RESTAPI}

# 파일 업로드 최대 허용 크기 → 50MB
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

# Tomcat 서블릿 컨테이너 기본 제한
server.tomcat.max-http-post-size=50MB
server.tomcat.max-swallow-size=50MB

# https 처리
server.forward-headers-strategy=framework

server.use-forward-headers=true

server.address=0.0.0.0
server.port=8080



